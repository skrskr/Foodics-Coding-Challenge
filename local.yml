version: '3.7'
services:
  app:
    image: foodics-task
    container_name: foodics-task-app
    restart: unless-stopped
    build:
      args:
        user: www-user
        uid: 1000
      context: ./
      dockerfile: ./Dockerfile
    env_file: .env
    volumes:
      - ./:/home/web/www
      - uploads:/home/web/www/public/media
    links:
      - db
      - redis
  
  worker:
    image: foodics-task
    container_name: foodics-task-worker
    restart: unless-stopped
    build:
      args:
        user: www-user
        uid: 1000
      context: ./
      dockerfile: ./Dockerfile
    env_file: .env
    command: php artisan queue:work 
    volumes:
      - ./:/home/web/www
      - uploads:/home/web/www/public/media
    links:
      - redis
      - db

  db:
    image: "mysql:8.1"
    container_name: foodics-task-db
    restart: unless-stopped
    ports:
      - 3307:3306
    volumes:
      - dbdata:/var/lib/mysql
      - dbsocket:/var/run/mysqld
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}

  nginx:
    container_name: foodics-task-nginx
    build:
      context: ./
      dockerfile: ./web.dockerfile
    volumes:
      - ./public:/home/web/www/public/
      - uploads:/home/web/www/public/media
      - ./nginx/foodics-task.docker.nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    links:
      - app

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    logging:
      driver: none

  redis:
    image: redis:7
    ports:
      - "6378:6379"
    restart: always
    volumes:
      - redisdata:/data

volumes:
  dbdata:
  dbsocket:
  uploads:
  redisdata: